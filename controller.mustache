/**
 * {{classname}} Controller
 * Generated from OpenAPI operations
 */

import Controller from './Controller.js';
import {{classname}}Service from '../services/{{classname}}Service.js';

export class {{classname}}Controller {
  constructor() {
    this.service = {{classname}}Service;
  }

  /**
   * Get MCP tools for this controller
   * Converts OpenAPI operations to MCP tools
   */
  getMCPTools() {
    const tools = [];
    
{{#operations}}
{{#operation}}
    // {{summary}} - {{httpMethod}} {{path}}
    tools.push(Controller.createMCPTool(
      "{{operationId}}",
      {
        title: "{{summary}}",
        description: "{{summary}}{{#notes}} - {{notes}}{{/notes}}",
        properties: {
{{#allParams}}
          {{paramName}}: {
            type: "{{#isString}}string{{/isString}}{{#isInteger}}integer{{/isInteger}}{{#isLong}}integer{{/isLong}}{{#isFloat}}number{{/isFloat}}{{#isDouble}}number{{/isDouble}}{{#isBoolean}}boolean{{/isBoolean}}{{#isArray}}array{{/isArray}}{{#isObject}}object{{/isObject}}{{^isPrimitiveType}}string{{/isPrimitiveType}}",
            description: "{{description}}"
          }{{#hasMore}},{{/hasMore}}
{{/allParams}}
        },
        required: [{{#requiredParams}}"{{paramName}}"{{#hasMore}}, {{/hasMore}}{{/requiredParams}}]
      },
      async (args) => {
        try {
          const result = await this.service.{{operationId}}(args);
          return result;
        } catch (error) {
          return Controller.sendError(null, error);
        }
      }
    ));

{{/operation}}
{{/operations}}
    
    return tools;
  }
}

export default new {{classname}}Controller();
